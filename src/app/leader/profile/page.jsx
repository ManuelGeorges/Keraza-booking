"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import { onAuthStateChanged } from "firebase/auth";
import { doc, getDoc, updateDoc } from "firebase/firestore";
import { auth, db } from "@/lib/firebase";
import SelectChurch from "@/components/SelectChurch";
import "./page.css";

export default function LeaderProfile() {
  const [loading, setLoading] = useState(true);
  const [userData, setUserData] = useState(null);
  const [editMode, setEditMode] = useState(false);
  const [formData, setFormData] = useState({});
  const router = useRouter();

  const churches = [
    "ูููุณุฉ ุงูุดููุฏ ุงูุนุธูู ูุงุฑูููุง ุจููููุฌ",
    "ูููุณุฉ ุงูุณูุฏุฉ ุงูุนุฐุฑุงุก ูุฑูู ู ุงููุฏูุณ ููุญูุง ุงูุญุจูุจ ุจุฌูุงูููุณ",
    "ูููุณุฉ ุงูุณูุฏุฉ ุงูุนุฐุฑุงุก ูุฑูู ู ุงูุงูุจุง ุจุงุฎููููุณ  ุดุงุฑุน ุณูุฑูุง",
    "ูููุณุฉ ุฑุฆูุณ ุงูููุงุฆูุฉ ุงูุฌููู ููุฎุงุฆูู ุจูุตุทูู ูุงูู",
    "ูููุณุฉ ุงูุณูุฏุฉ ุงูุนุฐุฑุงุก ูุฑูู ู ุงูุดููุฏ ุงูุนุธูู ูุงุฑูุฑูุณ ุงูุฑุณูู ุจุฌุฑูู ุจูุงุฒุง",
    "ูููุณุฉ ุงูุนุฐุฑุงุก ููุงุฑุฌุฑุฌุณ ุจุบุจุฑูุงู",
    "ูููุณุฉ ุงูุงูุจุง ุดููุฏู ูุงูุงูุจุง ูุฑูููุง ุจุฏูุง",
    "ูููุณุฉ ูุงุฑุฌุฑุฌุณ ุจุงููุณ",
    "ูููุณุฉ ุงูุนุฐุฑุงุก ูุงูุงูุจุง ุจุงุฎููููุณ ููุจุฑู ุงููุงููุณ (ุงูุจุดุงุฑุฉ)",
    "ูููุณุฉ ุงูููุงู ููุฎุงุฆูู ูุงูุงูุจุง ูุงุฑุงุณ ุงุฑุถ ุงููููู",
    "ูููุณุฉ ุงูุนุฐุฑุงุก ูุงุจูุณูููู ุญุฌุฑ ุงูููุงุชูู",
    "ูููุณุฉ ุงูุนุฐุฑุงุก ู ูุงุฑูุฑูุณ ุฌุฑูู ุจูุงุฒุง โ ุฎุฏูุฉ ุงู ุงูุฑุญูุฉ",
    "ูููุณุฉ ูุงุฑุฌุฑุฌุณ ูุงูุงูุจุง ุงูุทููููุณ ูุญุฑู ุจู",
    "ูููุณุฉ ุงุจูุณูููู ุงูุจุฑูุฒู",
    "ูููุณุฉ ุงูุนุฐุฑุงุก ูุญุฑู ุจู",
    "ูููุณุฉ ุงูุนุฐุฑุงุก ููุงุฑูููุง ุจุงููุณุชุดูู ุงููุจุทู",
    "ูููุณุฉ ุงูุงูุจุง ุงุจุฑุงู ุฒูู ุงูุนุงุจุฏูู ูุญุฑู ุจู",
    "ูููุณุฉ ุงูุนุฐุฑุงุก ูุงููุฏูุณ ุจููุณ ุจูุฑููุฒ",
    "ูููุณุฉ ุงูููุงู ููุฎุงุฆูู ุบุฑุจุงู",
    "ุฌูุนูุฉ ุงุตุฏูุงุก ุงููุชุงุจ ุงูููุฏุณ ูุญุฑู ุจู",
    "ุฌูุนูุฉ ุงูููุงู ููุฎุงุฆูู ูุญุฑู ุจู",
    "ูููุณุฉ ุงูุนุฐุฑุงุก ูุฑูู ู ุงุจููุง ุณูุนุงู ุงูุงุฎูููู ุจุบุฑุจุงู",
    "ูููุณุฉ ุงูุดููุฏ ุงูุนุธูู ูุงุฑุฌุฑุฌุณ ุจุงูุญุถุฑุฉ",
    "ูููุณุฉ ุงููุฏูุณ ุงุจูููุงุฑ ู ุงูุจุงุจุง ููุฑูุณ ุงูุณุงุฏุณ ุจุงูุฏุฑูุณุฉ",
  ];

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, async (user) => {
      if (!user) {
        router.push("/register");
        return;
      }

      const docRef = doc(db, "leaders", user.uid);
      const docSnap = await getDoc(docRef);

      if (!docSnap.exists()) {
        router.push("/register");
        return;
      }

      const data = docSnap.data();

      if (data.approved === false) {
        router.push("/waiting");
        return;
      }

      setUserData(data);
      setFormData({
        phone: data.phone || "",
        church: data.church || "",
      });
      setLoading(false);
    });

    return () => unsubscribe();
  }, [router]);

  const handleEditChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSave = async () => {
    if (!auth.currentUser) return;
    const docRef = doc(db, "leaders", auth.currentUser.uid);
    await updateDoc(docRef, formData);
    setUserData((prev) => ({ ...prev, ...formData }));
    setEditMode(false);
  };

  if (loading) return <p className="loading">ุฌุงุฑู ุงูุชุญููู...</p>;

  return (
    <div className="profile-container">
      <h1 className="profile-title">ุงูููู ุงูุดุฎุตู ููุฎุงุฏู</h1>
      <div className="profile-card">
        <p><span className="profile-label">ุงูุงุณู:</span> <span className="profile-value">{userData.firstName} {userData.lastName}</span></p>
        <p><span className="profile-label">ุงูุฅูููู:</span> <span className="profile-value">{userData.email}</span></p>

        {editMode ? (
          <>
            <div className="profile-field">
              <span className="profile-label">ุฑูู ุงูุชููููู:</span>
              <input
                type="tel"
                name="phone"
                value={formData.phone}
                onChange={handleEditChange}
                className="edit-input"
              />
            </div>

            <div className="profile-field">
              <span className="profile-label">ุงููููุณุฉ:</span>
              <SelectChurch
                options={churches.map((ch) => ({ value: ch, label: ch }))}
                onChange={(value) => setFormData({ ...formData, church: value })}
                defaultValue={{ value: formData.church, label: formData.church }}
              />
            </div>


          </>
        ) : (
          <>
            <p><span className="profile-label">ุงูุชููููู:</span> <span className="profile-value">{userData.phone}</span></p>
            <p><span className="profile-label">ุงููููุณุฉ:</span> <span className="profile-value">{userData.church}</span></p>
          </>
        )}

        <p><span className="profile-label">ุชุงุฑูุฎ ุงูุชุณุฌูู:</span> <span className="profile-value">{userData.createdAt?.toDate().toLocaleDateString("ar-EG")}</span></p>

        <div style={{ marginTop: "20px" }}>
          {editMode ? (
            <>
              <button className="profile-button save" onClick={handleSave}>๐พ ุญูุธ ุงูุชุนุฏููุงุช</button>
              <button className="profile-button cancel" onClick={() => setEditMode(false)}>โ ุฅูุบุงุก</button>
            </>
          ) : (
            <button className="profile-button edit" onClick={() => setEditMode(true)}>โ๏ธ ุชุนุฏูู ุงูุจูุงูุงุช</button>
          )}
        </div>
      </div>
    </div>
  );
}
